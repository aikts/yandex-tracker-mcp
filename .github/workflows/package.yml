name: Build and Publish

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install build dependencies
        run: uv sync --dev

      - name: Build package
        run: uv build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  build-dxt:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-15 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Prepare NodeJS
        uses: actions/setup-node@v4

      - name: Install dxt CLI
        run: |
          npm install -g @anthropic-ai/dxt

      - name: Create dxt package
        run: |
          dxt validate manifest.json
          cp images/tracker-logo.png .
          mkdir -p dxt-lib
          uv export > requirements.txt
          uv pip install -r requirements.txt --target=dxt-lib

          python dxt-utils/patch-platform.py ${{runner.os}} > manifest2.json
          rm manifest.json
          mv manifest2.json manifest.json
          dxt pack . yandex-tracker-mcp-${{github.ref_name}}-${{runner.os}}-${{runner.arch}}.dxt

      - name: Upload dxt artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dxt-${{matrix.os}}
          path: "*.dxt"
          retention-days: 7

  publish:
    needs:
      - build
      - build-dxt
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    environment:
      name: pypi
      url: https://pypi.org/p/yandex-tracker-mcp
    permissions:
      id-token: write  # Required for trusted publishing
      contents: write  # Required for releases

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true

    - name: Checkout code for server.json
      uses: actions/checkout@v4

    - name: Install MCP Publisher
      run: |
        curl -L "https://github.com/modelcontextprotocol/registry/releases/download/v1.1.0/mcp-publisher_1.1.0_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/').tar.gz" | tar xz mcp-publisher

    - name: Login to MCP Registry
      run: ./mcp-publisher login github-oidc

    - name: Publish to MCP Registry
      run: |
        ./mcp-publisher publish

    - name: Download dxt artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: "dxt-*"
        path: dxt/
        merge-multiple: true

    - name: Make Github release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        title: ${{ steps.get_tag.outputs.TAG }}
        files: |
          dist/*
          dxt/*
